openapi: 3.0.3
info:
  title: musichub
  version: 0.0.1
  description: |
    Una API REST para gestionar canciones, artistas y álbumes.

servers:
  - url: http://localhost:3000/api/v1

paths:
  # Rutas para el recurso "Tracks"
  /tracks:
    get:
      summary: Obtener una lista de tracks.
      parameters:
        - name: page
          in: query
          description: Número de página para la paginación.
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Límite de tracks por página.
          required: false
          schema:
            type: integer
            default: 10
        - name: sort
          in: query
          description: Criterio de ordenamiento.
          required: false
          schema:
            type: string
            default: 'track_name'
      responses:
        200:
          description: Lista de tracks.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tracks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Track'
                  total_pages:
                    type: integer
                  current_page:
                    type: integer
                  total_items:
                    type: integer
    post:
      summary: Crear un nuevo track.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Track'
      responses:
        201:
          description: Track creado con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
  /tracks/{track_uri}:
    get:
      summary: Obtener detalles de un track específico.
      parameters:
        - name: track_uri
          in: path
          description: URI del track.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Detalles del track.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
    put:
      summary: Actualizar un track específico.
      parameters:
        - name: track_uri
          in: path
          description: URI del track.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Track'
      responses:
        200:
          description: Track actualizado con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
    delete:
      summary: Eliminar un track específico.
      parameters:
        - name: track_uri
          in: path
          description: URI del track.
          required: true
          schema:
            type: string
      responses:
        204:
          description: Track eliminado con éxito.

  # Rutas para el recurso "Artistas"
  /artistas:
    get:
      summary: Obtener una lista de artistas.
      parameters:
        - name: page
          in: query
          description: Número de página para la paginación.
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Límite de artistas por página.
          required: false
          schema:
            type: integer
            default: 10
        - name: sort
          in: query
          description: Criterio de ordenamiento.
          required: false
          schema:
            type: string
            default: 'artist_name'
      responses:
        200:
          description: Lista de artistas.
          content:
            application/json:
              schema:
                type: object
                properties:
                  artistas:
                    type: array
                    items:
                      $ref: '#/components/schemas/Artista'
                  total_pages:
                    type: integer
                  current_page:
                    type: integer
                  total_items:
                    type: integer
    post:
      summary: Crear un nuevo artista.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artista'
      responses:
        201:
          description: Artista creado con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artista'
  /artistas/{artist_uri}:
    get:
      summary: Obtener detalles de un artista específico.
      parameters:
        - name: artist_uri
          in: path
          description: URI del artista.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Detalles del artista.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artista'
    put:
      summary: Actualizar un artista específico.
      parameters:
        - name: artist_uri
          in: path
          description: URI del artista.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artista'
      responses:
        200:
          description: Artista actualizado con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artista'
    delete:
      summary: Eliminar un artista específico.
      parameters:
        - name: artist_uri
          in: path
          description: URI del artista.
          required: true
          schema:
            type: string
      responses:
        204:
          description: Artista eliminado con éxito.

  # Rutas para el recurso "Álbumes"
  /albumes:
    get:
      summary: Obtener una lista de álbumes.
      parameters:
        - name: page
          in: query
          description: Número de página para la paginación.
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Límite de álbumes por página.
          required: false
          schema:
            type: integer
            default: 10
        - name: sort
          in: query
          description: Criterio de ordenamiento.
          required: false
          schema:
            type: string
            default: 'album_name'
      responses:
        200:
          description: Lista de álbumes.
          content:
            application/json:
              schema:
                type: object
                properties:
                  albumes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Album'
                  total_pages:
                    type: integer
                  current_page:
                    type: integer
                  total_items:
                    type: integer
    post:
      summary: Crear un nuevo álbum.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
      responses:
        201:
          description: Álbum creado con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
  /albumes/{album_uri}:
    get:
      summary: Obtener detalles de un álbum específico.
      parameters:
        - name: album_uri
          in: path
          description: URI del álbum.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Detalles del álbum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
    put:
      summary: Actualizar un álbum específico.
      parameters:
        - name: album_uri
          in: path
          description: URI del álbum.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
      responses:
        200:
          description: Álbum actualizado con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
    delete:
      summary: Eliminar un álbum específico.
      parameters:
        - name: album_uri
          in: path
          description: URI del álbum.
          required: true
          schema:
            type: string
      responses:
        204:
          description: Álbum eliminado con éxito.

components:
  schemas:
    Track:
      type: object
      properties:
        track_uri:
          type: string
          description: URI del track.
        track_name:
          type: string
          description: Nombre del track.
        artist_uris:
          type: array
          items:
            type: string
          description: URI de los artistas relacionados.
        artist_names:
          type: array
          items:
            type: string
          description: Nombres de los artistas relacionados.
        album_uri:
          type: string
          description: URI del álbum relacionado.
        album_name:
          type: string
          description: Nombre del álbum relacionado.
        album_artist_names:
          type: array
          items:
            type: string
          description: Nombres de los artistas del álbum.
        album_release_date:
          type: string
          format: date
          description: Fecha de lanzamiento del álbum.
        album_image_url:
          type: string
          description: URL de la imagen del álbum.
        track_number:
          type: integer
          description: Número de pista del álbum.
        track_duration:
          type: integer
          description: Duración de la canción en milisegundos.
        artist_genres:
          type: array
          items:
            type: string
          description: Géneros de los artistas.
        album_genres:
          type: array
          items:
            type: string
          description: Géneros del álbum.

    Artista:
      type: object
      properties:
        artist_uri:
          type: string
          description: URI del artista.
        artist_name:
          type: string
          description: Nombre del artista.
        artist_bio:
          type: string
          description: Biografía del artista.

    Album:
      type: object
      properties:
        album_uri:
          type: string
          description: URI del álbum.
        album_name:
          type: string
          description: Nombre del álbum.
        album_artist_names:
          type: array
          items:
            type: string
          description: Nombres de los artistas del álbum.
        album_release_date:
          type: string
          format: date
          description: Fecha de lanzamiento del álbum.
        album_image_url:
          type: string
          description: URL de la imagen del álbum.
